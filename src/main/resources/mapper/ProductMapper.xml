<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java.test.junior.product.mapper.ProductMapper">
    <select id="findById" resultMap="productResultMapper">
        SELECT *
        FROM product
        WHERE id = #{id}
    </select>

    <insert id="insert" keyProperty="id" keyColumn="id" useGeneratedKeys="true" parameterType="com.java.test.junior.product.model.Product">
        INSERT INTO product(name, price, description, user_id, created_at, updated_at)
        VALUES (#{name}, #{price}, #{description}, #{userId}, #{createdAt}, #{updatedAt})
    </insert>

    <update id="update" parameterType="com.java.test.junior.product.model.Product">
        UPDATE product
        SET name = #{name},
            price = #{price},
            description = #{description}
        WHERE id = #{id}
    </update>

    <delete id="delete">
        DELETE FROM product
        WHERE id = #{id}
    </delete>

    <select id="count" resultType="int">
        SELECT count(id)
        FROM product
        <if test="search != null">
            WHERE lower(name) LIKE concat('%',#{search},'%')
        </if>
    </select>

    <select id="findAll" resultMap="productResultMapper">
        SELECT *
        FROM product
        <if test="search != null">
            WHERE lower(name) LIKE concat('%',#{search},'%')
        </if>
        OFFSET #{page}
        LIMIT #{pageSize}
    </select>

    <insert id="rateProduct">
        INSERT INTO product_like(product_id, user_id, is_liked)
        VALUES (#{productId}, #{userId}, #{isLiked})
    </insert>
    
    <delete id="deleteRate">
        DELETE FROM product_like
        WHERE product_id = #{productId}
        AND user_id = #{userId}
    </delete>

    <select id="existsById" resultType="boolean">
        SELECT EXISTS(SELECT 1 FROM product WHERE id = #{id})
    </select>



    <resultMap id="productResultMapper" type="com.java.test.junior.product.model.Product">
        <id property="id" column="id"/>
        <result property="name" column="name"/>
        <result property="price" column="price"/>
        <result property="description" column="description"/>
        <result property="userId" column="user_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>
</mapper>